name: samurai CI

on: [pull_request]

jobs:
  #
  # Check samurai with pre-commit
  #
  #########################################################
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0

  #
  # Check samurai with cppcheck
  #
  #########################################################
  cppcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.10.0
          cache: false

      - name: Remove petsc
        run: pixi remove -p linux-64 petsc

      - name: Configure
        shell: pixi run bash {0}
        run: |
          cmake -S . -B .build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Debug -DBUILD_DEMOS=ON
          cppcheck --enable=all -q --project=.build/compile_commands.json --inline-suppr --suppressions-list=.cppcheck 2> cppcheck_err.txt

      - name: Check for errors
        run: |
          if [[ -s cppcheck_err.txt ]];
          then
            cat cppcheck_err.txt
            exit -1
          fi
  #
  # Check linux build with mamba environment
  #
  #########################################################
  linux-mamba:
    needs: [pre-commit, cppcheck]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - cpp-version: gcc-9
            compiler: "gcc"
            package: "gcc-9 g++-9"
            cc: "gcc-9"
            cxx: "g++-9"
          - cpp-version: gcc-10
            compiler: "gcc"
            package: "gcc-10 g++-10"
            cc: "gcc-10"
            cxx: "g++-10"
          - cpp-version: gcc-11
            compiler: "gcc"
            package: "gcc-11 g++-11"
            cc: "gcc-11"
            cxx: "g++-11"
          - cpp-version: gcc-12
            compiler: "gcc"
            package: "gcc-12 g++-12"
            cc: "gcc-12"
            cxx: "g++-12"
          - cpp-version: clang-11
            compiler: "clang"
            package: "clang-11"
            cc: "clang-11"
            cxx: "clang++-11"
          - cpp-version: clang-12
            compiler: "clang"
            package: "clang-12"
            cc: "clang-12"
            cxx: "clang++-12"
          - cpp-version: clang-13
            compiler: "clang"
            package: "clang-13"
            cc: "clang-13"
            cxx: "clang++-13"
          - cpp-version: clang-14
            compiler: "clang"
            package: "clang-14"
            cc: "clang-14"
            cxx: "clang++-14"
          - cpp-version: clang-15
            compiler: "clang"
            package: "clang-15"
            cc: "clang-15"
            cxx: "clang++-15"

    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}

    steps:
      - uses: actions/checkout@v3

      - name: Compiler installation
        run: |
          sudo apt update
          sudo apt install ${{ matrix.package }}

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.10.0
          cache: true

      - name: Run tests
        run: pixi run test

      - name: Test with pytest
        shell: pixi run bash {0}
        run: |
          cd tests
          pytest -v -s --h5diff

  macos-mamba:
    needs: [pre-commit, cppcheck]
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3

      - uses: prefix-dev/setup-pixi@v0.4.1
        with:
          pixi-version: v0.10.0
          cache: true

      - name: Run tests
        run: pixi run test

      - name: Test with pytest
        shell: pixi run bash {0}
        run: |
          cd tests
          pytest -v -s --h5diff
